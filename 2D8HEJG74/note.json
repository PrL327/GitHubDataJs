{
  "paragraphs": [
    {
      "text": "%md\n# 1. Describe project goals and why it is interesting \nWe plan to use this data to predict which languages are being used, what they’re being used for (commercial, fun, etc). The data behind Github is fascinating because it is one the most used version control software out there and allows the public to see the trend of languages throughout the years and see what type of projects people create, and how they collaborate with one another.",
      "user": "anonymous",
      "dateUpdated": "2018-03-23 19:25:59.661",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003e1. Describe project goals and why it is interesting\u003c/h1\u003e\n\u003cp\u003eWe plan to use this data to predict which languages are being used, what they’re being used for (commercial, fun, etc). The data behind Github is fascinating because it is one the most used version control software out there and allows the public to see the trend of languages throughout the years and see what type of projects people create, and how they collaborate with one another.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1521810620834_186615656",
      "id": "20180323-091020_783048043",
      "dateCreated": "2018-03-23 09:10:20.834",
      "dateStarted": "2018-03-23 19:25:59.664",
      "dateFinished": "2018-03-23 19:26:04.574",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n# 2. Describe data collection/source of data, data format, data preprocessing\nThis dataset gives us info on what languages are used, its files (including their contents) and their size along with info on commits. We will use a combination of the data from bigquery along with using Github’s official api using javascript. Bigquery’s data is listed as tables, while the api will give us info in the form of an API response as json file. With bigquery, we have to eliminate rows that have a date before the creation of github (which is about 0.04% (10 million) which is most likely an error from importing data to bigQuery) of the total rows. With the api, we eliminate some of the redundant information such as owner of repo (since unless you’re searching, you get the repo based off the username).\n\nOne of our data collection source was Octokit’s [rest.js](https://github.com/octokit/rest.js), a JavaScript based API scraper tool adopted by the GitHub team. From there we could access a large amount github data arranging from, user info, repository details, gists, issues, and pull requests from 24 million users.This is an example of a “query” using rest.js:\n```\n//This specific function gets all the info of JavaFXMusicLibrary repository from user PrL327\noctokit.repos.get({\n  owner: \u0027prl327\u0027,\n  repo: \u0027JavaFXMusicLibrary\u0027\n}).then(({data}) \u003d\u003e {\n  console.log(data);\n}); \n```\n Right now since we can only evaluate data that is public like public organizations and public repos, we had to put a safeguard in which we return 0, which in the end we filter out. We also have to worry about hitting the query limit for the api which is 1000 queries a hour.",
      "user": "anonymous",
      "dateUpdated": "2018-03-24 16:15:09.534",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003e2. Describe data collection/source of data, data format, data preprocessing\u003c/h1\u003e\n\u003cp\u003eThis dataset gives us info on what languages are used, its files (including their contents) and their size along with info on commits. We will use a combination of the data from bigquery along with using Github’s official api using javascript. Bigquery’s data is listed as tables, while the api will give us info in the form of an API response as json file. With bigquery, we have to eliminate rows that have a date before the creation of github (which is about 0.04% (10 million) which is most likely an error from importing data to bigQuery) of the total rows. With the api, we eliminate some of the redundant information such as owner of repo (since unless you’re searching, you get the repo based off the username).\u003c/p\u003e\n\u003cp\u003eOne of our data collection source was Octokit’s \u003ca href\u003d\"https://github.com/octokit/rest.js\"\u003erest.js\u003c/a\u003e, a JavaScript based API scraper tool adopted by the GitHub team. From there we could access a large amount github data arranging from, user info, repository details, gists, issues, and pull requests from 24 million users.This is an example of a “query” using rest.js:\u003c/p\u003e\n\u003cpre\u003e\u003ccode\u003e//This specific function gets all the info of JavaFXMusicLibrary repository from user PrL327\noctokit.repos.get({\n  owner: \u0026#39;prl327\u0026#39;,\n  repo: \u0026#39;JavaFXMusicLibrary\u0026#39;\n}).then(({data}) \u003d\u0026gt; {\n  console.log(data);\n}); \n\u003c/code\u003e\u003c/pre\u003e\n\u003cp\u003eRight now since we can only evaluate data that is public like public organizations and public repos, we had to put a safeguard in which we return 0, which in the end we filter out. We also have to worry about hitting the query limit for the api which is 1000 queries a hour.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1521810653358_1975482586",
      "id": "20180323-091053_248617491",
      "dateCreated": "2018-03-23 09:10:53.358",
      "dateStarted": "2018-03-24 16:15:09.542",
      "dateFinished": "2018-03-24 16:15:11.005",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n# 3. Describe contents of data in detail (write code to analyse and visualize it) \n",
      "user": "anonymous",
      "dateUpdated": "2018-03-23 09:11:30.621",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003e3. Describe contents of data in detail (write code to analyse and visualize it)\u003c/h1\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1521810678845_-168213685",
      "id": "20180323-091118_797267861",
      "dateCreated": "2018-03-23 09:11:18.845",
      "dateStarted": "2018-03-23 09:11:30.620",
      "dateFinished": "2018-03-23 09:11:30.640",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%md\n# 4. Describe possible applications of this data, Including your ideas for the next phase\nAn application for this data is seeing what type of programs use more storage than others allowing a system administrator to give certain users more storage based on their favorite language. One interesting application will be seeing which libraries are commonly used and can go a step further and seeing what are the top 10 libraries for each language for each year. We will be using this data to predict which languages will be expected to be used the most in 2018 and 2019. Since we also get information like commits, we can use this data to see average commits, average time between commits, and see average lifetime of a repository. We are also able to see contents of every file in any public repository, we can use the contents to teach a machine learning algorithm to tell the difference between python and javascript or between java and c++, etc.\n",
      "user": "anonymous",
      "dateUpdated": "2018-03-23 19:26:49.262",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\u003cdiv class\u003d\"markdown-body\"\u003e\n\u003ch1\u003e4. Describe possible applications of this data, Including your ideas for the next phase\u003c/h1\u003e\n\u003cp\u003eAn application for this data is seeing what type of programs use more storage than others allowing a system administrator to give certain users more storage based on their favorite language. One interesting application will be seeing which libraries are commonly used and can go a step further and seeing what are the top 10 libraries for each language for each year. We will be using this data to predict which languages will be expected to be used the most in 2018 and 2019. Since we also get information like commits, we can use this data to see average commits, average time between commits, and see average lifetime of a repository. We are also able to see contents of every file in any public repository, we can use the contents to teach a machine learning algorithm to tell the difference between python and javascript or between java and c++, etc.\u003c/p\u003e\n\u003c/div\u003e"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1521810703552_-1661723536",
      "id": "20180323-091143_1431321800",
      "dateCreated": "2018-03-23 09:11:43.552",
      "dateStarted": "2018-03-23 19:26:49.270",
      "dateFinished": "2018-03-23 19:26:49.348",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%r \ntest \u003c- read.csv(\"c:/users/danny/documents/github/githubdatajs/repos.csv\", header \u003d TRUE, nrows \u003d 1000)\ntest \u003d createDataFrame(test)\nregisterTempTable(test, \"test\")",
      "user": "anonymous",
      "dateUpdated": "2018-03-14 22:09:58.845",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "r",
          "editOnDblClick": false,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/r"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "\n\n\n\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1520883079271_-275456274",
      "id": "20180312-153119_1506858329",
      "dateCreated": "2018-03-12 15:31:19.271",
      "dateStarted": "2018-03-14 22:09:58.855",
      "dateFinished": "2018-03-14 22:09:59.034",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%bigquery.sql\r\nSELECT\r\n  name,\r\n  COUNT(*) AS occurences\r\nFROM\r\n  `bigquery-public-data.github_repos.languages` AS l,\r\n  UNNEST(l.LANGUAGE)\r\nGROUP BY\r\n  name\r\nORDER BY\r\n  occurences DESC\r\n  limit 25",
      "user": "anonymous",
      "dateUpdated": "2018-03-14 22:48:11.100",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "pieChart",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {
                    "columns": [
                      {
                        "name": "repo_name",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "name",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      },
                      {
                        "name": "bytes",
                        "visible": true,
                        "width": "*",
                        "sort": {},
                        "filters": [
                          {}
                        ],
                        "pinned": ""
                      }
                    ],
                    "scrollFocus": {},
                    "selection": [],
                    "grouping": {
                      "grouping": [],
                      "aggregations": [],
                      "rowExpandedStates": {}
                    },
                    "treeView": {},
                    "pagination": {
                      "paginationCurrentPage": 1.0,
                      "paginationPageSize": 50.0
                    }
                  },
                  "tableColumnTypeState": {
                    "names": {
                      "name": "string",
                      "occurences": "string",
                      "": "string"
                    },
                    "updated": false
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": true,
                    "showAggregationFooter": true
                  },
                  "updated": false,
                  "initialized": false
                },
                "multiBarChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "stackedAreaChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "pieChart": {}
              },
              "commonSetting": {},
              "keys": [
                {
                  "name": "name",
                  "index": 0.0,
                  "aggr": "sum"
                }
              ],
              "groups": [],
              "values": [
                {
                  "name": "occurences",
                  "index": 1.0,
                  "aggr": "sum"
                }
              ]
            },
            "helium": {}
          }
        },
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/sql"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "name\toccurences\t\nJavaScript\t1123958\t\nCSS\t837019\t\nHTML\t797819\t\nShell\t652554\t\nPython\t559512\t\nRuby\t383544\t\nJava\t376565\t\nPHP\t349100\t\nC\t302075\t\nC++\t286837\t\nMakefile\t256446\t\nObjective-C\t174474\t\nC#\t135930\t\nPerl\t106133\t\nBatchfile\t101104\t\nGo\t91785\t\nApacheConf\t74388\t\nCoffeeScript\t71088\t\nCMake\t57224\t\nAssembly\t49904\t\nTypeScript\t43236\t\nSwift\t42657\t\nScala\t35203\t\nASP\t34812\t\nLua\t34518\t\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1521079799054_-1739442454",
      "id": "20180314-220959_1695009132",
      "dateCreated": "2018-03-14 22:09:59.054",
      "dateStarted": "2018-03-14 22:47:54.268",
      "dateFinished": "2018-03-14 22:47:57.384",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%bigquery.sql\nSELECT\n  name,\n  COUNT(*) AS occurences\nFROM\n  `bigquery-public-data.github_repos.languages` AS l,\n  UNNEST(l.LANGUAGE)\nGROUP BY\n  name\nORDER BY\n  occurences\n  limit 25",
      "user": "anonymous",
      "dateUpdated": "2018-03-14 22:49:52.416",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "pieChart",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "name": "string",
                      "occurences": "string",
                      "": "string"
                    },
                    "updated": true
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            },
            "helium": {}
          }
        },
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/sql"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "name\toccurences\t\nRing\t1\t\nNetLinx+ERB\t3\t\nLFE\t4\t\nDataWeave\t4\t\nRUNOFF\t5\t\nOpal\t7\t\nBefunge\t7\t\nTI Program\t7\t\nOmgrofl\t8\t\nLoomScript\t9\t\nSolidity\t9\t\nRouge\t11\t\nCharity\t11\t\nGlyph\t11\t\nGenie\t12\t\nPogoScript\t12\t\nMTML\t12\t\nEQ\t13\t\nJolie\t13\t\nTea\t14\t\nECL\t15\t\nGrace\t15\t\nFilebench WML\t16\t\nREALbasic\t17\t\nShellSession\t17\t\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1521082148871_-2028982417",
      "id": "20180314-224908_1317000163",
      "dateCreated": "2018-03-14 22:49:08.871",
      "dateStarted": "2018-03-14 22:49:42.983",
      "dateFinished": "2018-03-14 22:49:46.625",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%bigquery.sql\nSELECT\n  name,\n  SUM(bytes) AS totalBytes\nFROM\n  `bigquery-public-data.github_repos.languages` AS l,\n  UNNEST(l.LANGUAGE)\nGROUP BY\n  name\nORDER BY\n  totalBytes DESC\nlimit 25",
      "user": "anonymous",
      "dateUpdated": "2018-03-14 22:50:18.001",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "pieChart",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "name": "string",
                      "totalBytes": "string",
                      "": "string"
                    },
                    "updated": true
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                }
              },
              "commonSetting": {}
            },
            "helium": {}
          }
        },
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/sql"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "name\ttotalBytes\t\nC\t6419976764463\t\nJavaScript\t1255708192332\t\nC++\t537485492018\t\nPHP\t523791028716\t\nHTML\t332097615786\t\nJava\t304036288071\t\nPython\t183777967157\t\nCSS\t156460325531\t\nC#\t146136761849\t\nAssembly\t139733713510\t\nGo\t66075708376\t\nObjective-C\t61266463202\t\nJupyter Notebook\t54771793186\t\nRuby\t36930948664\t\nTypeScript\t32492932765\t\nShell\t31601666961\t\nPerl\t29736859659\t\nMakefile\t25360664965\t\nVisual Basic\t14695789544\t\nWeb Ontology Language\t13077428222\t\nGroff\t10859181039\t\nOpenEdge ABL\t10045346752\t\nVHDL\t9936802146\t\nScala\t9731992620\t\nEmacs Lisp\t9217768686\t\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1521081430480_377487563",
      "id": "20180314-223710_886127630",
      "dateCreated": "2018-03-14 22:37:10.480",
      "dateStarted": "2018-03-14 22:50:18.022",
      "dateFinished": "2018-03-14 22:50:23.292",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%bigquery.sql\nSELECT\n  name,\n  SUM(bytes) AS totalBytes\nFROM\n  `bigquery-public-data.github_repos.languages` AS l,\n  UNNEST(l.LANGUAGE)\nGROUP BY\n  name\nORDER BY\n  totalBytes\nlimit 25",
      "user": "anonymous",
      "dateUpdated": "2018-03-14 22:52:03.548",
      "config": {
        "colWidth": 12.0,
        "fontSize": 9.0,
        "enabled": true,
        "results": {
          "0": {
            "graph": {
              "mode": "pieChart",
              "height": 300.0,
              "optionOpen": false,
              "setting": {
                "table": {
                  "tableGridState": {},
                  "tableColumnTypeState": {
                    "names": {
                      "name": "string",
                      "totalBytes": "string",
                      "": "string"
                    },
                    "updated": true
                  },
                  "tableOptionSpecHash": "[{\"name\":\"useFilter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable filter for columns\"},{\"name\":\"showPagination\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable pagination for better navigation\"},{\"name\":\"showAggregationFooter\",\"valueType\":\"boolean\",\"defaultValue\":false,\"widget\":\"checkbox\",\"description\":\"Enable a footer for displaying aggregated values\"}]",
                  "tableOptionValue": {
                    "useFilter": false,
                    "showPagination": false,
                    "showAggregationFooter": false
                  },
                  "updated": false,
                  "initialized": false
                },
                "multiBarChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "stackedAreaChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                },
                "lineChart": {
                  "rotate": {
                    "degree": "-45"
                  },
                  "xLabelStatus": "default"
                }
              },
              "commonSetting": {},
              "keys": [
                {
                  "name": "name",
                  "index": 0.0,
                  "aggr": "sum"
                }
              ],
              "groups": [],
              "values": [
                {
                  "name": "totalBytes",
                  "index": 1.0,
                  "aggr": "sum"
                }
              ]
            },
            "helium": {}
          }
        },
        "editorSetting": {
          "language": "sql",
          "editOnDblClick": false,
          "completionKey": "TAB"
        },
        "editorMode": "ace/mode/sql"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TABLE",
            "data": "name\ttotalBytes\t\nDataWeave\t238\t\nOmgrofl\t2301\t\nNetLinx+ERB\t9031\t\nBefunge\t10120\t\nShellSession\t15416\t\nOpal\t33717\t\nRUNOFF\t42672\t\nTI Program\t58983\t\nMyghty\t85961\t\nMoocode\t116352\t\nGenie\t126883\t\nDogescript\t137247\t\nNearley\t204852\t\nLFE\t216024\t\nFilebench WML\t260901\t\nNextflow\t311313\t\nCirru\t314174\t\nGraphviz (DOT)\t371252\t\nPogoScript\t394920\t\nLoomScript\t607338\t\nFantom\t632197\t\nShen\t683664\t\nZimpl\t843231\t\nSolidity\t862233\t\nDCPU-16 ASM\t883518\t\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1521082191424_710896432",
      "id": "20180314-224951_317206387",
      "dateCreated": "2018-03-14 22:49:51.424",
      "dateStarted": "2018-03-14 22:51:30.785",
      "dateFinished": "2018-03-14 22:51:35.842",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "%bigquery.sql\n",
      "user": "anonymous",
      "dateUpdated": "2018-03-14 22:51:30.736",
      "config": {},
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1521082290736_160007108",
      "id": "20180314-225130_232090955",
      "dateCreated": "2018-03-14 22:51:30.736",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Intermediate Report",
  "id": "2D8HEJG74",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "md:shared_process": [],
    "bigquery:shared_process": [],
    "spark:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false,
    "isRevisionSupported": true
  },
  "info": {}
}